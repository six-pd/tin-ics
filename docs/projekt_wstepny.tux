\documentclass{article}
\usepackage{polski}
\usepackage[utf8]{inputenc}
\usepackage{url}

\author{Bartłomiej Partyka, Michał Urbański, Krzysztof Blankiewicz, Tomasz Załuska}

\title{<lider> - Projekt wstępny TIN}

\begin{document}

\maketitle

\section{Spis treści\label{spis}}

\begin{itemize}

    \item \ref{spis}. Spis treści . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{spis}
    \item \ref{tresc}. Treść zadania . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{tresc}
    \item \ref{przyp}. Przypadki użycia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{przyp}
    \item \ref{srod}. Środowisko . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{srod}
    \item \ref{arch}. Architektura rozwiązania . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{arch}
    \item \ref{api}. API modułów . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{api}
    \item \ref{kom}. Listy komunikató . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{kom}
    \item \ref{test}. Sposób testowania . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{test}
    \item \ref{prez}. Prezentacja . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{prez}
    \item \ref{prac}. Podział pracy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{prac}
    \item \ref{harm}. Harmonogram pracy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{harm}
    \item \ref{git}. Repozytorium github . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \pageref{git}


\end{itemize}

\section{Treść zadania\label{tresc}}

Urządzenia przechowują zmienne statyczne w pamięciach ulotnej i nieulotnej. Zmienne dynamiczne przechowywane są w pamięci ulotnej. Projektowany system komunikacji działa niezależnie od systemu wykrywania zaniku zasilania i zachowywania stanu urządzenia. Aplikacja korzystająca z usług tego systemu potwierdza konsumpcję danych. Celem systemu jest retransmisja niepotwierdzonych danych po wznowieniu zasilania. System używa stosu TCP/IPv6. Zaprojektować API systemu komunikacyjnego. Ponadto, należy zaprojektować moduł do Wireshark umożliwiający wyświetlanie i analizę zdefiniowanych komunikatów. (Być może pomocnym będzie przejrzenie RFC 5326 "Licklider Transmission Protocol").

\section{Nazwa własna\label{nazwa}}

<ciekawa nazwa>

\section{Przypadki użycia\label{przyp}}

\section{Środowisko\label{srod}}

\subsection{Systemy operacyjne}

\subsection{Języki i biblioteki}

\subsection{Narzędzia testowe}

\section{Architektura rozwiązania\label{arch}}

<ilustrację i opis struktury logicznej systemu (koncepcyjnych bloków funkcjonalnych)>

\section{(ewentualnie)API modułów\label{api}}

\section{(ewentualnie)Listy komunikatów\label{kom}}

\section{Sposób testowania\label{test}}

\section{Prezentacja\label{prez}}

<scenariusze testów akceptacyjnych>

\section{Podział pracy\label{prac}}

\section{Harmonogram pracy\label{harm}}

<minimum 1, zalecane 2 punkty kontrolne dla odbioru częściowych funkcji/modułów projektu>

\section{Repozytorium github\label{git}}

Projekt jest dostępny pod adresem: \url{https://github.com/six-pd/tin-ics}

\end{document}